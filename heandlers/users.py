import logging
import os
import requests
from database.models import add_user_if_not_exists, User, async_session
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile
from datetime import datetime, timedelta
from sqlalchemy import select

from keyboards.inline_keyboard import tariff_keyboard, help_keyboard, connect_keyboard, back
from keyboards.reply_menu_keyboard import menu

logging.basicConfig(level=logging.INFO)

BOT_USERNAME = os.getenv('BOT_USERNAME')

router_users: Router = Router()


# –°—Ç–∞—Ä—Ç —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
@router_users.message(CommandStart())
async def start_command(message: Message):
    ref_id = None

    if message.text and " " in message.text:
        parts = message.text.split()
        if len(parts) > 1 and parts[1].startswith("ref_"):
            ref_id = int(parts[1][4:])

    await add_user_if_not_exists(
        user_id=message.from_user.id,
        username=message.from_user.username,
        ref_id=ref_id,
        is_paid=False,
    )

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    if ref_id:
        async with async_session() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–µ—Ñ–µ—Ä–µ—Ä —Å —ç—Ç–∏–º ID
            result = await session.execute(select(User).filter_by(id=ref_id))
            referrer = result.scalar_one_or_none()
            if referrer:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ID —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ —É —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user = await session.execute(select(User).filter_by(id=message.from_user.id))
                current_user = user.scalar_one_or_none()
                if current_user:
                    current_user.referrer_id = ref_id
                    session.add(current_user)
                    await session.commit()

                referrer.referral_count += 1
                session.add(referrer)
                await session.commit()

    await message.answer(
        text='üëãüèª –ü—Ä–∏–≤–µ—Ç!\n\n–≠—Ç–æ Telegram-–±–æ—Ç –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VPN.\n\n–î–æ—Å—Ç—É–ø–Ω—ã –ª–æ–∫–∞—Ü–∏–∏:\n'
             '‚îú üá´üáÆ –§–∏–Ω–ª—è–Ω–¥–∏—è\n‚îú üá∑üá∫ –†–æ—Å—Å–∏—è\n‚îú üáπüá∑ –¢—É—Ä—Ü–∏—è\n‚îú üá≥üá± –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã\n‚îî üá∑üá¥ –†—É–º—ã–Ω–∏—è\n\n'
             '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: <a href="https://t.me/magwindow">magwindow</a>\n'
             '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ ‚ö°Ô∏è–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è ‚Üì\n\n'
             '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ-–∫–æ–¥ –≤ —á–∞—Ç–µ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø üéÅ',
        reply_markup=menu,
        disable_web_page_preview=True
    )


# –ö—É–ø–∏—Ç—å
@router_users.message(F.text == 'üî• –ö—É–ø–∏—Ç—å')
async def buy_tariff(message: Message):
    await message.delete()
    await message.answer(
        text="–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ:\n\n"
             "250‚ÇΩ / 1 –º–µ—Å\n"
             "650‚ÇΩ / 3 –º–µ—Å\n"
             "1200‚ÇΩ / 6 –º–µ—Å\n\n"
             "üí≥ –ú–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑:\n"
             "SberPay, –°–ë–ü, T-Pay, –∫–∞—Ä—Ç—ã –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.",
        reply_markup=await tariff_keyboard()
    )


# –ü–æ–º–æ—â—å
@router_users.message(F.text == '‚ùì –ü–æ–º–æ—â—å')
async def help_command(message: Message):
    await message.delete()
    await message.answer(
        text="–ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–∑ –±–æ—Ç–∞\n"
             " –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–º –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –¥–ª—è\n"
             " –¥–æ—Å—Ç—É–ø–∞ –∫ VPN –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
             "–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É ‚Üì",
        reply_markup=await help_keyboard()
    )


# –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
@router_users.message(F.text == '‚ö°Ô∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è!')
async def connect_command(message: Message):
    await message.delete()
    await message.answer(
        text="–î–æ—Å—Ç—É–ø –∫ VPN –≤ 2 —à–∞–≥–∞:\n\n"
             "1Ô∏è‚É£ <b>–°–∫–∞—á–∞—Ç—å</b> - –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n"
             "2Ô∏è‚É£ <b>–ü–æ–¥–∫–ª—é—á–∏—Ç—å</b> - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
             "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å VPN –≤—Ä—É—á–Ω—É—é:\n"
             '<a href="https://telegra.ph/Podklyuchenie-v2RayTun-Android-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android</a>\n'
             '<a href="https://telegra.ph/Podklyuchenie-v2raytun-iOS-11-09">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS/MacOS</a>\n'
             '<a href="https://telegra.ph/Nastrojka-VPN-PK-Windows-08-08">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows</a>\n\n'
             "–°—Å—ã–ª–∫–∞ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n"
             "–¢–∞–ø–Ω–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ ‚Üì",
        reply_markup=await connect_keyboard(),
        disable_web_page_preview=True
    )


# –°—Ç–∞—Ç—É—Å
@router_users.message(F.text == '‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å')
async def status_command(message: Message):
    await message.delete()

    url = "https://raw.githubusercontent.com/magwindow/vless_vpn_bot/refs/heads/master/images/status.jpg"
    local_path = "status.jpg"

    # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç
    if not os.path.exists(local_path):
        response = requests.get(url)
        with open(local_path, "wb") as file:
            file.write(response.content)

    photo = FSInputFile(local_path)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    async with async_session() as session:
        # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        result = await session.execute(
            select(User).where(User.referrer_id == message.from_user.id)
        )
        referrals = result.scalars().all()
        referral_count = len(referrals)
        # –°—á–∏—Ç–∞–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (–µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –ø–æ–ª—è is_paid - –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ 0)
        # paid_referral_count = len([r for r in referrals if getattr(r, "is_paid", False)])
        paid_referral_count = len([r for r in referrals if r.is_paid])

    # –ó–¥–µ—Å—å —è –ø—Ä–æ—Å—Ç–æ —Å–∏–º—É–ª–∏—Ä—É—é –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
    trial_end_date = datetime.utcnow() + timedelta(days=3)
    remaining_days = (trial_end_date - datetime.utcnow()).days

    await message.answer_photo(
        photo,
        caption=f"–î–æ—Å—Ç—É–ø:‚òëÔ∏è <b>–ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥</b>\n"
                f"‚îú –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: <b>{remaining_days}</b>\n"
                f"‚îî –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: <b>{trial_end_date.strftime('%d.%m.%Y %H:%M')}</b>\n\n"
                f"<b>–í–∞—à–∞ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞:</b>\n"
                f"<code>https://t.me/{BOT_USERNAME}?start=ref_{message.from_user.id}</code>\n\n"
                f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º!\n\n"
                f"<b>–ü—Ä–∏–≤–µ–¥–µ–Ω–æ –¥—Ä—É–∑–µ–π:</b>\n"
                f"‚îî –í—Å–µ–≥–æ - {referral_count}, –û–ø–ª–∞—á–∏–≤–∞—é—Ç - {paid_referral_count}",
        reply_markup=await back(),
        disable_web_page_preview=True
    )
